SYSTEM TESTING

The purpose of testing is to discover errors. Testing is the process of trying to discover 
every conceivable fault or weakness in a work product. It provides a way to check the 
functionality of components, sub assemblies, assemblies and/or a finished product It is the 
process of exercising software with the intent of ensuring that the Software system meets its 
requirements and user expectations and does not fail in an unacceptable manner. There are 
various types of test. Each test type addresses a specific testing requirement.

TYPES OF TESTS

Testing is the process of trying to discover every conceivable fault or weakness in a 
work product. The different types of testing are given below

7.1 UNIT TESTING

Unit testing involves the design of test cases that validate that the internal program 
logic is functioning properly, and that program inputs produce valid outputs. All decision 
branches and internal code flow should be validated. It is the testing of individual software 
units of the application .it is done after the completion of an individual unit before integration. 
This is a structural testing, that relies on knowledge of its construction and is invasive. 
Unit tests perform basic tests at component level and test a specific business process, 
application, and/or system configuration. Unit tests ensure that each unique path of a business 
process performs accurately to the documented specifications and contains clearly defined 
inputs and expected results

INTEGRATION TESTING

Integration tests are designed to test integrated software components to determine if 
they actually run as one program. Testing is event driven and is more concerned with the basic 
outcome of screens or fields. Integration tests demonstrate that although the components were individually satisfaction, as shown by successfully unit testing, the combination of components 
is correct and consistent. Integration testing is specifically aimed at exposing the problems 
that arise from the combination of components.

7.3 FUNCTIONAL TESTING

Functional tests provide systematic demonstrations that functions tested are available as 
specified by the business and technical requirements, system documentation, and user manuals.
Functional testing is centered on the following items:
Valid Input : identified classes of valid input must be accepted.
Invalid Input : identified classes of invalid input must be rejected.
Functions : identified functions must be exercised.
Output : identified classes of application outputs must be exercised.
Systems/ Procedures: Interfacing systems or procedures must be invoked.
Organization and preparation of functional tests is focused on requirements, key functions, or 
special test cases. In addition, systematic coverage pertaining to identify Business process 
flows; data fields, predefined processes, and successive processes must be considered for 
testing. Before functional testing is complete, additional tests are identified and the effective 
value of current tests is determined.

7.4 SYSTEM TESTING

System testing ensures that the entire integrated software system meets requirements. 
It tests a configuration to ensure known and predictable results. An example of system testing 
is the configuration oriented system integration test. System testing is based on process 
descriptions and flows, emphasizing pre-driven process links and integration points.

7.5 UNIT TESTING

Unit testing is usually conducted as part of a combined code and unit test phase of the 
software lifecycle, although it is not uncommon for coding and unit testing to be conducted as 
two distinct phases.
